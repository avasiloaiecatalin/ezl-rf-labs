package ro.usv.rf;

import java.util.Arrays;
import java.util.Collections;

public class MainClass {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		double[][] learningSet = FileUtils.readLearningSetFromFile(
				"in.txt");
		FileUtils.writeLearningSetToFile(
				"out1.csv",
				normalizeLearningSet(learningSet));
	}

	private static double[][] normalizeLearningSet(double[][] learningSet) {
		double[][] normalizedLearningSet = new double[learningSet.length][learningSet[0].length];
		double[]max=new double[learningSet[0].length];
		double[]min=new double[learningSet[0].length];
		for (int j = 0; j < learningSet[0].length; j++) {
			max[j]=getMax(j, learningSet);
			min[j]=getMin(j, learningSet);
		
		}
		for (int i = 0; i < learningSet.length; i++) {

			for (int j = 0; j < learningSet[0].length; j++) {
				normalizedLearningSet[i][j] = (learningSet[i][j]-getMax(j,learningSet))/(getMax(j,learningSet)-getMin(j,learningSet));

			}

		}
	

		return normalizedLearningSet;
	}

	private static double getMax(int column, double[][] learningSet) {
		double max = learningSet[0][column];
		for (int i = 1; i < learningSet.length; i++) {
			if (learningSet[i][column] > max) {
				max = learningSet[i][column];
			}
		}
		return max;
	}

	private static double getMin(int column, double[][] learningSet) {
		double min = learningSet[0][column];
		for (int i = 1; i < learningSet.length; i++) {
			if (learningSet[i][column] < min) {
				min = learningSet[i][column];
			}
		}
		return min;
	}
}
